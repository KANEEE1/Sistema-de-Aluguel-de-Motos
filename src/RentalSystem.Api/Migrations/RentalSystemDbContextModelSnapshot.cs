// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentalSystem.Api.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace RentalSystem.Api.Migrations
{
    [DbContext(typeof(RentalSystemDbContext))]
    partial class RentalSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RentalSystem.Api.Entities.DeliveryPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date")
                        .HasAnnotation("Relational:JsonPropertyName", "data_nascimento");

                    b.Property<string>("CnhImage")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "imagem_cnh");

                    b.Property<string>("CnhNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "numero_cnh");

                    b.Property<string>("CnhType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "tipo_cnh");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "cnpj");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "identificador");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "nome");

                    b.HasKey("Id");

                    b.HasIndex("CnhNumber")
                        .IsUnique();

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.ToTable("DeliveryPeople");
                });

            modelBuilder.Entity("RentalSystem.Api.Entities.Motorcycle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "identificador");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "modelo");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "placa");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "ano");

                    b.HasKey("Id");

                    b.HasIndex("Plate")
                        .IsUnique();

                    b.ToTable("Motorcycles");
                });

            modelBuilder.Entity("RentalSystem.Api.Entities.MotorcycleNotification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("MotorcycleId")
                        .HasColumnType("uuid");

                    b.Property<string>("NotificationType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("MotorcycleNotifications");
                });

            modelBuilder.Entity("RentalSystem.Api.Entities.Rental", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<decimal>("DailyRate")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "valor_diaria");

                    b.Property<Guid>("DeliveryPersonId")
                        .HasColumnType("uuid")
                        .HasAnnotation("Relational:JsonPropertyName", "entregador_id_interno");

                    b.Property<string>("DeliveryPersonIdentifier")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "entregador_id");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasAnnotation("Relational:JsonPropertyName", "data_termino");

                    b.Property<DateOnly>("ExpectedEndDate")
                        .HasColumnType("date")
                        .HasAnnotation("Relational:JsonPropertyName", "data_previsao_termino");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "identificador");

                    b.Property<Guid>("MotorcycleId")
                        .HasColumnType("uuid")
                        .HasAnnotation("Relational:JsonPropertyName", "moto_id_interno");

                    b.Property<string>("MotorcycleIdentifier")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "identificador_moto");

                    b.Property<DateOnly?>("ReturnDate")
                        .HasColumnType("date")
                        .HasAnnotation("Relational:JsonPropertyName", "data_devolucao");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasAnnotation("Relational:JsonPropertyName", "data_inicio");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "valor_total");

                    b.HasKey("Id");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("RentalSystem.Api.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
